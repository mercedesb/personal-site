$white: #ffffff;
$brown: #aa916d;
/*$blue: #2E4052;*/
$purple: #564e58;
// $yellow: #D19D36;
$yellow: #bf8b24;
$gray: #524948;
$red: #904e55;

$light-gray: lighten($gray, 30%);
$loading-gray: #dddddd;
$black: #252627;
$green: #aaa16d;

//Create Array
$colors-array: (
  "white" $white $black,
  "brown" $brown $white,
  "purple" $purple $white,
  "yellow" $yellow $white,
  "gray" $gray $white,
  "red" $red $white,
  "loading-gray" $loading-gray $black
);

$base-drop-shadow: 0 2px 10px 0 $black;

$poppins: "Poppins";
$libre-baskerville: "Libre Baskerville";

$header-font-family: $libre-baskerville, serif;
$base-font-family: $poppins, sans-serif;

$small-font-size: 0.89rem;
$base-font-size: 1rem;
$large-font-size: 1.56rem;
$larger-font-size: 2rem;
$largest-font-size: 2.67rem;
$giant-font-size: 3.56rem;

$base-font-weight: 400;
$heavy-font-weight: 600;
$light-font-weight: 200;

$small-spacing: 10px;
$base-spacing: 20px;
$large-spacing: 40px;
$larger-spacing: 60px;

$base-radius: 2px;

$content-width: 800px;
$wide-content-width: 1200px;
$button-width: 300px;
$button-height: 50px;

$light-opacity: 0.2;

// Grid system
//
$max-feature: max-width;
$min-feature: min-width;
$default-feature: $max-feature;
// phone and phone max width
$phone-width: 320px;
$phone-large-width: 480px;
$min-phone: $min-feature $phone-width;
$max-phone: $max-feature ($phone-width + 1);
$min-phone-large: $min-feature $phone-large-width;
$max-phone-large: $max-feature ($phone-large-width + 1);
// tablet and phone max width
$tablet-width: 768px;
$tablet-large-width: 1024px;
$min-tablet: $min-feature $tablet-width;
$max-tablet: $max-feature ($tablet-width + 1);
$min-tablet-large: $min-feature $tablet-large-width;
$max-tablet-large: $max-feature ($tablet-large-width + 1);
// desktop and phone max width
$desktop-width: 1224px;
$desktop-large-width: 1824px;
$min-desktop: $min-feature $desktop-width;
$max-desktop: $max-feature ($desktop-width + 1);
$min-desktop-large: $min-feature $desktop-large-width;
$max-desktop-large: $max-feature ($desktop-large-width + 1);

// mixins
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin background-color {
  @each $type in $colors-array {
    &--#{nth($type, 1)} {
      background-color: #{nth($type, 2)};
      color: #{nth($type, 3)};
    }
  }
}

@mixin color {
  @each $type in $colors-array {
    &--#{nth($type, 1)} {
      color: #{nth($type, 2)};
    }
  }
}

@mixin hover-saturate {
  @each $type in $colors-array {
    &--#{nth($type, 1)} {
      background-color: #{nth($type, 2)};
      &:hover {
        background-color: saturate(nth($type, 2), 7%);
      }
    }
  }
}

@mixin media($query: $feature $value) {
  @if length($query) == 1 {
    @media screen and ($default-feature: nth($query, 1)) {
      @content;
    }
  } @else {
    $loop-to: length($query);
    $media-query: "screen and ";

    @if length($query) % 2 != 0 {
      $loop-to: $loop-to - 1;
    }

    $i: 1;
    @while $i <= $loop-to {
      $media-query: $media-query +
        "(" +
        nth($query, $i) +
        ": " +
        nth($query, $i + 1) +
        ") ";

      @if ($i + 1) != $loop-to {
        $media-query: $media-query + "and ";
      }

      $i: $i + 2;
    }

    @media #{$media-query} {
      @content;
    }
  }
}

@mixin flex-container {
  display: flex;
  box-sizing: border-box;
  flex: 1;

  &--justifyCenter {
    justify-content: center;
  }

  &--spaceBetween {
    justify-content: space-between;
  }

  &--alignCenter {
    align-items: center;
  }

  &--column {
    flex-direction: column;
  }

  &--wrap {
    flex-wrap: wrap;
  }
}

@mixin inner-page-content {
  display: flex;
  box-sizing: border-box;
  flex: 1;
  flex-direction: column;
  align-items: center;
  // overflow: auto;
}

@mixin draw {
  $i: 300;
  @while $i <= 1140 {
    &--#{$i} {
      &:hover {
        path {
          stroke-dasharray: $i;
          animation: draw-#{$i} 1.5s;
        }
      }

      @keyframes draw-#{$i} {
        from {
          stroke-dashoffset: $i;
        }
        to {
          stroke-dashoffset: 0;
        }
      }

      $i: $i + 20;
    }
  }
}

@mixin light-svg {
  svg {
    g,
    path {
      stroke: $white;
      stroke-width: 2;
    }
  }
}
